{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bastian\\\\Desktop\\\\Chat_App\\\\frontend\\\\src\\\\components\\\\ChatContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ChatInput from './ChatInput';\nimport Logout from './Logout';\nimport Messages from './Messages';\nimport { getAllMessagesRoute, sendMessageRoute } from '../utils/APIRoutes';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatContainer = _ref => {\n  _s();\n\n  let {\n    currentChat,\n    currentUser,\n    socket\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const response = await axios.post(getAllMessagesRoute, {\n        form: currentUser._id,\n        to: currentChat._id\n      });\n      setMessages(response.data);\n    };\n\n    fetchMessages();\n  });\n\n  const handleSendMsg = async msg => {\n    await axios.post(sendMessageRoute, {\n      form: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: currentUser._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    msg.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recive\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentChat && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentChat.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.formSelf ? \"sended\" : \"recieved\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content \",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        handleSendMsg: handleSendMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChatContainer, \"pc4hrywurejFM3TKECfbJf6H5R0=\");\n\n_c = ChatContainer;\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 80% 10%;\n  gap: 0.1rem;\n  overflow: hidden;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    grid-template-rows: 15% 70% 15%;\n  }\n  .chat-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2rem;\n    .user-details {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n  }\n  .chat-messages {\n    padding: 1rem 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    overflow: auto;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .message {\n      display: flex;\n      align-items: center;\n      .content {\n        max-width: 40%;\n        overflow-wrap: break-word;\n        padding: 1rem;\n        font-size: 1.1rem;\n        border-radius: 1rem;\n        color: #d1d1d1;\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\n          max-width: 70%;\n        }\n      }\n    }\n    .sended {\n      justify-content: flex-end;\n      .content {\n        background-color: #4f04ff21;\n      }\n    }\n    .recieved {\n      justify-content: flex-start;\n      .content {\n        background-color: #9900ff20;\n      }\n    }\n  }\n`;\n_c2 = Container;\nexport default ChatContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/Bastian/Desktop/Chat_App/frontend/src/components/ChatContainer.jsx"],"names":["React","useState","useEffect","styled","ChatInput","Logout","Messages","getAllMessagesRoute","sendMessageRoute","axios","ChatContainer","currentChat","currentUser","socket","messages","setMessages","fetchMessages","response","post","form","_id","to","data","handleSendMsg","msg","message","current","emit","from","msgs","push","fromSelf","on","avatarImage","username","map","formSelf","Container","div"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport ChatInput from './ChatInput';\r\nimport Logout from './Logout';\r\nimport Messages from './Messages';\r\nimport {getAllMessagesRoute, sendMessageRoute} from '../utils/APIRoutes';\r\nimport axios from 'axios';\r\n\r\n\r\nconst ChatContainer = ({currentChat,currentUser, socket}) => {\r\n  const [messages,setMessages] = useState([]);\r\n\r\n  useEffect(()=>{\r\n    const fetchMessages = async()=>{\r\n      const response = await axios.post(getAllMessagesRoute,{\r\n        form: currentUser._id,\r\n        to: currentChat._id\r\n      })\r\n      setMessages(response.data)\r\n    }\r\n    fetchMessages();\r\n  });\r\n\r\n    const handleSendMsg = async( msg) =>{\r\n      await axios.post(sendMessageRoute,{\r\n        form: currentUser._id,\r\n        to: currentChat._id,\r\n        message: msg\r\n      });\r\n      socket.current.emit(\"send-msg\",{\r\n        to: currentChat._id,\r\n        from: currentUser._id,\r\n        message: msg,\r\n      });\r\n      const msgs = [...messages];\r\n\r\n      msg.push({fromSelf: true, message: msg});\r\n      setMessages(msgs)\r\n    };\r\n    useEffect(()=>{\r\n      if(socket.current){\r\n        socket.current.on(\"msg-recive\")\r\n      }\r\n    },[])\r\n  return (\r\n    <>\r\n    {currentChat && (\r\n        <Container>\r\n        <div className=\"chat-header\">\r\n            <div className=\"user-details\">\r\n                <div className=\"avatar\">\r\n                <img\r\n                    src={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\r\n                    alt=\"avatar\"\r\n                 />\r\n                </div>\r\n                <div className=\"username\">\r\n                    <h3>{currentChat.username}</h3>\r\n                </div>\r\n            </div>\r\n            <Logout/>\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n        {messages.map((message) => {\r\n          return (\r\n            <div>\r\n              <div\r\n                className={`message ${\r\n                  message.formSelf ? \"sended\" : \"recieved\"\r\n                }`}\r\n              >\r\n                <div className=\"content \">\r\n                  <p>{message.message}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        </div>\r\n        <ChatInput handleSendMsg={handleSendMsg}/>\r\n    </Container>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 10% 80% 10%;\r\n  gap: 0.1rem;\r\n  overflow: hidden;\r\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n    grid-template-rows: 15% 70% 15%;\r\n  }\r\n  .chat-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 2rem;\r\n    .user-details {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1rem;\r\n      .avatar {\r\n        img {\r\n          height: 3rem;\r\n        }\r\n      }\r\n      .username {\r\n        h3 {\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .chat-messages {\r\n    padding: 1rem 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    overflow: auto;\r\n    &::-webkit-scrollbar {\r\n      width: 0.2rem;\r\n      &-thumb {\r\n        background-color: #ffffff39;\r\n        width: 0.1rem;\r\n        border-radius: 1rem;\r\n      }\r\n    }\r\n    .message {\r\n      display: flex;\r\n      align-items: center;\r\n      .content {\r\n        max-width: 40%;\r\n        overflow-wrap: break-word;\r\n        padding: 1rem;\r\n        font-size: 1.1rem;\r\n        border-radius: 1rem;\r\n        color: #d1d1d1;\r\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n          max-width: 70%;\r\n        }\r\n      }\r\n    }\r\n    .sended {\r\n      justify-content: flex-end;\r\n      .content {\r\n        background-color: #4f04ff21;\r\n      }\r\n    }\r\n    .recieved {\r\n      justify-content: flex-start;\r\n      .content {\r\n        background-color: #9900ff20;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default ChatContainer"]},"metadata":{},"sourceType":"module"}