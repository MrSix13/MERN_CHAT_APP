{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Bastian/Desktop/Chat_App/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _asyncToGenerator from\"C:/Users/Bastian/Desktop/Chat_App/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Bastian/Desktop/Chat_App/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject;import _regeneratorRuntime from\"C:\\\\Users\\\\Bastian\\\\Desktop\\\\Chat_App\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect,useRef}from'react';import styled from'styled-components';import axios from'axios';import{useNavigate}from'react-router-dom';import{allUsersRoute,host}from'../utils/APIRoutes';import Contacts from'../components/Contacts';import Welcome from'../components/Welcome';import ChatContainer from'../components/ChatContainer';import{io}from'socket.io-client';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Chat=function Chat(){var socket=useRef();var navigate=useNavigate();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),contacts=_useState2[0],setContacts=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),currentUser=_useState4[0],setCurrentUser=_useState4[1];var _useState5=useState(undefined),_useState6=_slicedToArray(_useState5,2),currentChat=_useState6[0],setCurrentChat=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isLoaded=_useState8[0],setIsLoaded=_useState8[1];useEffect(function(){var chatAPI=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(localStorage.getItem(\"chat-app-user\")){_context.next=4;break;}navigate(\"/login\");_context.next=10;break;case 4:_context.t0=setCurrentUser;_context.next=7;return JSON.parse(localStorage.getItem(\"chat-app-user\"));case 7:_context.t1=_context.sent;(0,_context.t0)(_context.t1);setIsLoaded(true);case 10:case\"end\":return _context.stop();}}},_callee);}));return function chatAPI(){return _ref.apply(this,arguments);};}();chatAPI();},[]);useEffect(function(){if(currentUser){socket.current=io(host);socket.current.emit(\"add-user\",currentUser._id);}},[currentUser]);useEffect(function(){var info=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!currentUser){_context2.next=9;break;}if(!currentUser.isAvatarImageSet){_context2.next=8;break;}_context2.next=4;return axios.get(\"\".concat(allUsersRoute,\"/\").concat(currentUser._id));case 4:data=_context2.sent;setContacts(data.data);_context2.next=9;break;case 8:navigate(\"/setAvatar\");case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function info(){return _ref2.apply(this,arguments);};}();info();},[currentUser]);var handleChatChange=function handleChatChange(chat){setCurrentChat(chat);};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Contacts,{contacts:contacts,currentUser:currentUser,changeChat:handleChatChange}),isLoaded&&currentChat===undefined?/*#__PURE__*/_jsx(Welcome,{currentUser:currentUser}):/*#__PURE__*/_jsx(ChatContainer,{currentChat:currentChat,currentUser:currentUser,socket:socket})]})});};var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  height:100vh;\\n  width: 100vw;\\n  display: felx;\\n  flex-direction: column;\\n  justify-content: center;\\n  gap: 1rem;\\n  align-items: center;\\n  background-color: #131324;\\n  .container{\\n    height: 85vh;\\n    width:85vw;\\n    background-color: #00000076;\\n    display: grid;\\n    grid-template-columns: 25% 75%;\\n    @media screen and (min-width: 720px) and (max-width: 1080px){\\n      grid-template-columns: 35% 65%\\n    }\\n  }\\n\\n\\n\"])));export default Chat;","map":{"version":3,"sources":["C:/Users/Bastian/Desktop/Chat_App/frontend/src/pages/Chat.jsx"],"names":["React","useState","useEffect","useRef","styled","axios","useNavigate","allUsersRoute","host","Contacts","Welcome","ChatContainer","io","Chat","socket","navigate","contacts","setContacts","undefined","currentUser","setCurrentUser","currentChat","setCurrentChat","isLoaded","setIsLoaded","chatAPI","localStorage","getItem","JSON","parse","current","emit","_id","info","isAvatarImageSet","get","data","handleChatChange","chat","Container","div"],"mappings":"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","sourcesContent":["import React,{useState, useEffect, useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {allUsersRoute, host} from '../utils/APIRoutes';\r\nimport Contacts from '../components/Contacts';\r\nimport Welcome from '../components/Welcome';\r\nimport ChatContainer from '../components/ChatContainer';\r\nimport {io} from 'socket.io-client';\r\n\r\nconst Chat = () => {\r\n  const socket = useRef();\r\n  const navigate = useNavigate();\r\n  const [contacts,setContacts] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n  const [currentChat, setCurrentChat] = useState(undefined);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  \r\n  useEffect(()=>{\r\n    const chatAPI = async()=>{\r\n      if(!localStorage.getItem(\"chat-app-user\")){\r\n        navigate(\"/login\");\r\n      }else{\r\n        setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\r\n        setIsLoaded(true)\r\n      }\r\n    }\r\n    chatAPI();\r\n  },[])\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      socket.current = io(host);\r\n      socket.current.emit(\"add-user\", currentUser._id);\r\n    }\r\n  }, [currentUser]);\r\n  useEffect(()=>{\r\n    const info = async()=>{\r\n      if(currentUser){\r\n        if(currentUser.isAvatarImageSet){\r\n          const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\r\n          setContacts(data.data)\r\n        }else{\r\n          navigate(\"/setAvatar\")\r\n        }\r\n      }\r\n    }\r\n\r\n    info();\r\n  },[currentUser])\r\n  \r\n  const handleChatChange = (chat) =>{\r\n    setCurrentChat(chat)\r\n  }\r\n  \r\n  return (\r\n    <Container>\r\n      <div className=\"container\">\r\n        <Contacts \r\n           contacts={contacts} \r\n           currentUser={currentUser} \r\n           changeChat={handleChatChange}\r\n        />\r\n        { isLoaded && currentChat === undefined ? (\r\n          <Welcome currentUser={currentUser} />\r\n        ):(\r\n          <ChatContainer \r\n            currentChat={currentChat} \r\n            currentUser={currentUser}\r\n            socket={socket}\r\n          />\r\n        )}\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\nconst Container = styled.div`\r\n  height:100vh;\r\n  width: 100vw;\r\n  display: felx;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #131324;\r\n  .container{\r\n    height: 85vh;\r\n    width:85vw;\r\n    background-color: #00000076;\r\n    display: grid;\r\n    grid-template-columns: 25% 75%;\r\n    @media screen and (min-width: 720px) and (max-width: 1080px){\r\n      grid-template-columns: 35% 65%\r\n    }\r\n  }\r\n\r\n\r\n`;\r\nexport default Chat"]},"metadata":{},"sourceType":"module"}