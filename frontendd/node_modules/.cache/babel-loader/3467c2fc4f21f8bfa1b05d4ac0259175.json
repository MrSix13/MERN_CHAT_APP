{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bastian\\\\Desktop\\\\Chat_App\\\\frontend\\\\src\\\\pages\\\\Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { allUsersRoute, host } from '../utils/APIRoutes';\nimport Contacts from '../components/Contacts';\nimport Welcome from '../components/Welcome';\nimport ChatContainer from '../components/ChatContainer';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const socket = useRef();\n  const navigate = useNavigate();\n  const [contacts, setContacts] = useState([]);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [currentChat, setCurrentChat] = useState(undefined);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    const chatAPI = async () => {\n      if (!localStorage.getItem(\"chat-app-user\")) {\n        navigate(\"/login\");\n      } else {\n        setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\n        setIsLoaded(true);\n      }\n    };\n\n    chatAPI();\n  }, []);\n  useEffect(() => {\n    if (currentUser) {\n      socket.current = io(host);\n    }\n  }, [currentUser]);\n  useEffect(() => {\n    const info = async () => {\n      if (currentUser) {\n        if (currentUser.isAvatarImageSet) {\n          const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\n          setContacts(data.data);\n        } else {\n          navigate(\"/setAvatar\");\n        }\n      }\n    };\n\n    info();\n  }, [currentUser]);\n\n  const handleChatChange = chat => {\n    setCurrentChat(chat);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Contacts, {\n        contacts: contacts,\n        currentUser: currentUser,\n        changeChat: handleChatChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), isLoaded && currentChat === undefined ? /*#__PURE__*/_jsxDEV(Welcome, {\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ChatContainer, {\n        currentChat: currentChat,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"ge30YLJEpaIZj8dh2zJFIanImOE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Chat;\nconst Container = styled.div`\n  height:100vh;\n  width: 100vw;\n  display: felx;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n  .container{\n    height: 85vh;\n    width:85vw;\n    background-color: #00000076;\n    display: grid;\n    grid-template-columns: 25% 75%;\n    @media screen and (min-width: 720px) and (max-width: 1080px){\n      grid-template-columns: 35% 65%\n    }\n  }\n\n\n`;\n_c2 = Container;\nexport default Chat;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/Bastian/Desktop/Chat_App/frontend/src/pages/Chat.jsx"],"names":["React","useState","useEffect","useRef","styled","axios","useNavigate","allUsersRoute","host","Contacts","Welcome","ChatContainer","io","Chat","socket","navigate","contacts","setContacts","currentUser","setCurrentUser","undefined","currentChat","setCurrentChat","isLoaded","setIsLoaded","chatAPI","localStorage","getItem","JSON","parse","current","info","isAvatarImageSet","data","get","_id","handleChatChange","chat","Container","div"],"mappings":"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","sourcesContent":["import React,{useState, useEffect, useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {allUsersRoute, host} from '../utils/APIRoutes';\r\nimport Contacts from '../components/Contacts';\r\nimport Welcome from '../components/Welcome';\r\nimport ChatContainer from '../components/ChatContainer';\r\nimport {io} from 'socket.io-client';\r\n\r\nconst Chat = () => {\r\n  const socket = useRef();\r\n  const navigate = useNavigate();\r\n  const [contacts,setContacts] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n  const [currentChat, setCurrentChat] = useState(undefined);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  \r\n  useEffect(()=>{\r\n    const chatAPI = async()=>{\r\n      if(!localStorage.getItem(\"chat-app-user\")){\r\n        navigate(\"/login\");\r\n      }else{\r\n        setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\r\n        setIsLoaded(true)\r\n      }\r\n    }\r\n    chatAPI();\r\n  },[])\r\n  useEffect(()=>{\r\n    if(currentUser){\r\n      socket.current = io(host)\r\n    }\r\n  },[currentUser])\r\n  useEffect(()=>{\r\n    const info = async()=>{\r\n      if(currentUser){\r\n        if(currentUser.isAvatarImageSet){\r\n          const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\r\n          setContacts(data.data)\r\n        }else{\r\n          navigate(\"/setAvatar\")\r\n        }\r\n      }\r\n    }\r\n    info();\r\n  },[currentUser])\r\n  \r\n  const handleChatChange = (chat) =>{\r\n    setCurrentChat(chat)\r\n  }\r\n  \r\n  return (\r\n    <Container>\r\n      <div className=\"container\">\r\n        <Contacts \r\n           contacts={contacts} \r\n           currentUser={currentUser} \r\n           changeChat={handleChatChange}\r\n        />\r\n        { isLoaded && currentChat === undefined ? (\r\n          <Welcome currentUser={currentUser} />\r\n        ):(\r\n          <ChatContainer currentChat={currentChat} currentUser={currentUser}/>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\nconst Container = styled.div`\r\n  height:100vh;\r\n  width: 100vw;\r\n  display: felx;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #131324;\r\n  .container{\r\n    height: 85vh;\r\n    width:85vw;\r\n    background-color: #00000076;\r\n    display: grid;\r\n    grid-template-columns: 25% 75%;\r\n    @media screen and (min-width: 720px) and (max-width: 1080px){\r\n      grid-template-columns: 35% 65%\r\n    }\r\n  }\r\n\r\n\r\n`;\r\nexport default Chat"]},"metadata":{},"sourceType":"module"}