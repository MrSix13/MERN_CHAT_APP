{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bastian\\\\Desktop\\\\Chat_App\\\\frontend\\\\src\\\\pages\\\\SetAvatar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport loader from '../assets/loader.gif';\nimport { ToastContainer, toast } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from 'axios';\nimport { setAvatarRoute } from '../utils/APIRoutes';\nimport { Buffer } from 'buffer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SetAvatar = () => {\n  _s();\n\n  const api = \"https://api.multiavatar.com/45678945\";\n  const navigate = useNavigate();\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\"\n  };\n\n  const setProfilePicture = async () => {\n    if (selectedAvatar === undefined) {\n      toast.error(\"Please select an avatar\", toastOptions);\n    } else {\n      const user = await JSON.parse(localStorage.getItem(\"chat-app-user\"));\n      const {\n        data\n      } = await axios.post(`${setAvatarRoute}/${user._id}`, {\n        image: avatars[selectedAvatar]\n      });\n      console.log(data);\n\n      if (data.isSet) {\n        user.isAvatarImageSet = true;\n        user.avatarImage = data.image;\n        localStorage.setItem(\"chat-app-user\", JSON.stringify(user));\n        navigate(\"/\");\n      } else {\n        toast.error(\"Error setting avatar. Please try again\", toastOptions);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"chat-app-user\")) {\n      navigate(\"/login\");\n    }\n\n    const fetchImage = async () => {\n      const data = [];\n\n      for (let i = 0; i < 4; i++) {\n        const image = await axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n        const buffer = new Buffer(image.data);\n        data.push(buffer.toString(\"base64\"));\n      }\n\n      setAvatars(data);\n      setIsLoading(false);\n    };\n\n    fetchImage();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loader,\n        alt: \"loader\",\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pick an avatar as yout profile picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatars\",\n        children: avatars.map((avatar, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `avatar ${selectedAvatar === index ? \"selected\" : \"\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64, ${avatar}`,\n              alt: \"avatar\",\n              onClick: () => setSelectedAvatar(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-btn\",\n        onClick: setProfilePicture,\n        children: \"Set as Profile Piture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SetAvatar, \"Vf3bLGWNS+p8++1hLS4MtcrCzCs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SetAvatar;\nconst Container = styled.div`\n  display: flex:\n  justify-content: center;\n  align-items:center;\n  flex-direction: column;\n  gap: 3rem;\n  background-color: #131324;\n  height:100vh;\n  width:100vw;\n  .loader{\n      max-line-size:100%\n  }\n  .title-container{\n      h1{\n          color:white\n      }\n  }\n  .avatars{\n      display:flex;\n      gap: 2rem;\n      .avatar{\n          border: 0.4rem solid transparent;\n          padding: 0.4rem;\n          border-radius: 5rem;\n          display:flex;\n          justify-content:center;\n          align-items:center;\n          transition:0.5s ease-in-out;\n          img{\n            height: 6rem;\n          }\n      }\n      .selected{\n          border: 0.4rem solid #4e0eff;\n      }\n  }\n  .submit-btn{\n            background-color: #997af0;\n            color: white;\n            padding: 1rem 2rem;\n            border:none ;\n            font-weight: bold;\n            cursor:pointer;\n            border-radius: 0.4rem;\n            font-size:1rem;\n            text-transform: uppercase;\n            transition: 0.5s ease-in-out;\n            &:hover{\n                background-color: #4e0eff;\n            }\n  }\n`;\n_c2 = Container;\nexport default SetAvatar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SetAvatar\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/Bastian/Desktop/Chat_App/frontend/src/pages/SetAvatar.jsx"],"names":["React","useState","useEffect","useNavigate","styled","loader","ToastContainer","toast","axios","setAvatarRoute","Buffer","SetAvatar","api","navigate","avatars","setAvatars","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","undefined","toastOptions","position","autoClose","pauseOnHover","draggable","theme","setProfilePicture","error","user","JSON","parse","localStorage","getItem","data","post","_id","image","console","log","isSet","isAvatarImageSet","avatarImage","setItem","stringify","fetchImage","i","get","Math","round","random","buffer","push","toString","map","avatar","index","Container","div"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport loader from '../assets/loader.gif';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from 'axios';\r\nimport { setAvatarRoute } from '../utils/APIRoutes';\r\nimport {Buffer} from 'buffer';\r\n\r\nconst SetAvatar = () => {\r\n    const api = \"https://api.multiavatar.com/45678945\";\r\n    const navigate = useNavigate();\r\n    const [avatars, setAvatars] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [selectedAvatar, setSelectedAvatar] = useState(undefined);\r\n    const toastOptions = {\r\n        position: \"bottom-right\",\r\n        autoClose: 8000,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        theme: \"dark\"\r\n    };\r\n    const setProfilePicture = async()=>{\r\n        if(selectedAvatar === undefined){\r\n            toast.error(\"Please select an avatar\", toastOptions)\r\n        }else{\r\n            const user = await JSON.parse(localStorage.getItem(\"chat-app-user\"))\r\n            const {data} = await axios.post(`${setAvatarRoute}/${user._id}`,{\r\n                image: avatars[selectedAvatar]\r\n            });\r\n            console.log(data);\r\n            if(data.isSet){\r\n                user.isAvatarImageSet = true;\r\n                user.avatarImage = data.image;\r\n                localStorage.setItem(\"chat-app-user\", JSON.stringify(user));\r\n                navigate(\"/\")\r\n            }else{\r\n                toast.error(\"Error setting avatar. Please try again\", toastOptions)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!localStorage.getItem(\"chat-app-user\")){\r\n            navigate(\"/login\")\r\n        }\r\n        const fetchImage = async()=>{\r\n            const data = [];\r\n            for(let i=0; i<4; i++){\r\n                const image = await axios.get(\r\n                    `${api}/${Math.round(Math.random()*1000)}`\r\n                );\r\n                const buffer = new Buffer(image.data);\r\n                data.push(buffer.toString(\"base64\"))\r\n            }\r\n            setAvatars(data);\r\n            setIsLoading(false);\r\n        }\r\n        fetchImage();\r\n    },[])\r\n\r\n  return (\r\n    <>\r\n    {\r\n        isLoading ? <Container>\r\n            <img src={loader} alt=\"loader\" className=\"loader\"/>\r\n        </Container> :(\r\n             <Container>\r\n                <div className=\"title-container\">\r\n                    <h1>Pick an avatar as yout profile picture</h1>\r\n                </div>\r\n                <div className=\"avatars\">\r\n                    {avatars.map((avatar, index)=>{\r\n                        return(\r\n                            <div\r\n                            key={index}\r\n                            className={`avatar ${\r\n                                selectedAvatar === index ? \"selected\" : \"\"\r\n                            }`}\r\n                            >\r\n                            <img\r\n                                src={`data:image/svg+xml;base64, ${avatar}`}\r\n                                alt=\"avatar\"\r\n                                onClick={()=>setSelectedAvatar(index)}\r\n                            />  \r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                    <button className='submit-btn' onClick={setProfilePicture}>\r\n                        Set as Profile Piture\r\n                    </button>\r\n            </Container>\r\n        )}\r\n        <ToastContainer/>\r\n    </>\r\n  )\r\n}\r\nconst Container = styled.div`\r\n  display: flex:\r\n  justify-content: center;\r\n  align-items:center;\r\n  flex-direction: column;\r\n  gap: 3rem;\r\n  background-color: #131324;\r\n  height:100vh;\r\n  width:100vw;\r\n  .loader{\r\n      max-line-size:100%\r\n  }\r\n  .title-container{\r\n      h1{\r\n          color:white\r\n      }\r\n  }\r\n  .avatars{\r\n      display:flex;\r\n      gap: 2rem;\r\n      .avatar{\r\n          border: 0.4rem solid transparent;\r\n          padding: 0.4rem;\r\n          border-radius: 5rem;\r\n          display:flex;\r\n          justify-content:center;\r\n          align-items:center;\r\n          transition:0.5s ease-in-out;\r\n          img{\r\n            height: 6rem;\r\n          }\r\n      }\r\n      .selected{\r\n          border: 0.4rem solid #4e0eff;\r\n      }\r\n  }\r\n  .submit-btn{\r\n            background-color: #997af0;\r\n            color: white;\r\n            padding: 1rem 2rem;\r\n            border:none ;\r\n            font-weight: bold;\r\n            cursor:pointer;\r\n            border-radius: 0.4rem;\r\n            font-size:1rem;\r\n            text-transform: uppercase;\r\n            transition: 0.5s ease-in-out;\r\n            &:hover{\r\n                background-color: #4e0eff;\r\n            }\r\n  }\r\n`;\r\nexport default SetAvatar"]},"metadata":{},"sourceType":"module"}