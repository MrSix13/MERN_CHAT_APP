{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bastian\\\\Desktop\\\\Chat_App\\\\frontend\\\\src\\\\components\\\\ChatContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport ChatInput from './ChatInput';\nimport Logout from './Logout';\nimport Messages from './Messages';\nimport { getAllMessagesRoute, sendMessageRoute } from '../utils/APIRoutes';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatContainer = _ref => {\n  _s();\n\n  let {\n    currentChat,\n    currentUser,\n    socket\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const scrollRef = useRef();\n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (currentChat) {\n        const response = await axios.post(getAllMessagesRoute, {\n          form: currentUser._id,\n          to: currentChat._id\n        });\n        setMessages(response.data);\n      }\n    };\n\n    fetchMessages();\n  }, [currentChat]);\n\n  const handleSendMsg = async msg => {\n    await axios.post(sendMessageRoute, {\n      form: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: currentUser._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    msgs.push({\n      formSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", msg => {\n        setArrivalMessage({\n          formSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentChat && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentChat.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.formSelf ? \"sended\" : \"recieved\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"content \",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        handleSendMsg: handleSendMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChatContainer, \"mi0QMl3/5E7g8ZqeUYhWegNKQS4=\");\n\n_c = ChatContainer;\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 10% 80% 10%;\n  gap: 0.1rem;\n  overflow: hidden;\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    grid-template-rows: 15% 70% 15%;\n  }\n  .chat-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2rem;\n    .user-details {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n  }\n  .chat-messages {\n    padding: 1rem 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    overflow: auto;\n    &::-webkit-scrollbar {\n      width: 0.2rem;\n      &-thumb {\n        background-color: #ffffff39;\n        width: 0.1rem;\n        border-radius: 1rem;\n      }\n    }\n    .message {\n      display: flex;\n      align-items: center;\n      .content {\n        max-width: 40%;\n        overflow-wrap: break-word;\n        padding: 1rem;\n        font-size: 1.1rem;\n        border-radius: 1rem;\n        color: #d1d1d1;\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\n          max-width: 70%;\n        }\n      }\n    }\n    .sended {\n      justify-content: flex-end;\n      .content {\n        background-color: #4f04ff21;\n      }\n    }\n    .recieved {\n      justify-content: flex-start;\n      .content {\n        background-color: #9900ff20;\n      }\n    }\n  }\n`;\n_c2 = Container;\nexport default ChatContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/Bastian/Desktop/Chat_App/frontend/src/components/ChatContainer.jsx"],"names":["React","useState","useEffect","useRef","styled","ChatInput","Logout","Messages","getAllMessagesRoute","sendMessageRoute","axios","ChatContainer","currentChat","currentUser","socket","messages","setMessages","arrivalMessage","setArrivalMessage","scrollRef","fetchMessages","response","post","form","_id","to","data","handleSendMsg","msg","message","current","emit","from","msgs","push","formSelf","on","prev","scrollIntoView","behavior","avatarImage","username","map","Container","div"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport ChatInput from './ChatInput';\r\nimport Logout from './Logout';\r\nimport Messages from './Messages';\r\nimport {getAllMessagesRoute, sendMessageRoute} from '../utils/APIRoutes';\r\nimport axios from 'axios';\r\n\r\n\r\nconst ChatContainer = ({currentChat,currentUser, socket}) => {\r\n  const [messages,setMessages] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(()=>{\r\n    const fetchMessages = async()=>{\r\n      if(currentChat){\r\n        const response = await axios.post(getAllMessagesRoute,{\r\n          form: currentUser._id,\r\n          to: currentChat._id\r\n      })\r\n     setMessages(response.data)\r\n    }\r\n  }\r\n  fetchMessages();\r\n  },[currentChat])\r\n\r\n    const handleSendMsg = async( msg) =>{\r\n      await axios.post(sendMessageRoute,{\r\n        form: currentUser._id,\r\n        to: currentChat._id,\r\n        message: msg\r\n      });\r\n      socket.current.emit(\"send-msg\",{\r\n        to: currentChat._id,\r\n        from: currentUser._id,\r\n        message: msg,\r\n      });\r\n      const msgs = [...messages];\r\n\r\n      msgs.push({formSelf: true, message: msg});\r\n      setMessages(msgs)\r\n    };\r\n    useEffect(() => {\r\n      if (socket.current) {\r\n        socket.current.on(\"msg-recieve\", (msg) => {\r\n          setArrivalMessage({ formSelf: false, message: msg });\r\n        });\r\n      }\r\n    }, []);\r\n    useEffect(() => {\r\n      arrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\r\n    }, [arrivalMessage]);\r\n  \r\n    useEffect(() => {\r\n      scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n  \r\n\r\n  return (\r\n    <>\r\n    {currentChat && (\r\n        <Container>\r\n        <div className=\"chat-header\">\r\n            <div className=\"user-details\">\r\n                <div className=\"avatar\">\r\n                <img\r\n                    src={`data:image/svg+xml;base64,${currentChat.avatarImage}`}\r\n                    alt=\"avatar\"\r\n                 />\r\n                </div>\r\n                <div className=\"username\">\r\n                    <h3>{currentChat.username}</h3>\r\n                </div>\r\n            </div>\r\n            <Logout/>\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n        {messages.map((message) => {\r\n          return (\r\n            <div>\r\n              <div\r\n                className={`message ${\r\n                  message.formSelf ? \"sended\" : \"recieved\"\r\n                }`}\r\n              >\r\n                <div className=\"content \">\r\n                  <p>{message.message}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        </div>\r\n        <ChatInput handleSendMsg={handleSendMsg}/>\r\n    </Container>\r\n    )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 10% 80% 10%;\r\n  gap: 0.1rem;\r\n  overflow: hidden;\r\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n    grid-template-rows: 15% 70% 15%;\r\n  }\r\n  .chat-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 2rem;\r\n    .user-details {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1rem;\r\n      .avatar {\r\n        img {\r\n          height: 3rem;\r\n        }\r\n      }\r\n      .username {\r\n        h3 {\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .chat-messages {\r\n    padding: 1rem 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    overflow: auto;\r\n    &::-webkit-scrollbar {\r\n      width: 0.2rem;\r\n      &-thumb {\r\n        background-color: #ffffff39;\r\n        width: 0.1rem;\r\n        border-radius: 1rem;\r\n      }\r\n    }\r\n    .message {\r\n      display: flex;\r\n      align-items: center;\r\n      .content {\r\n        max-width: 40%;\r\n        overflow-wrap: break-word;\r\n        padding: 1rem;\r\n        font-size: 1.1rem;\r\n        border-radius: 1rem;\r\n        color: #d1d1d1;\r\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n          max-width: 70%;\r\n        }\r\n      }\r\n    }\r\n    .sended {\r\n      justify-content: flex-end;\r\n      .content {\r\n        background-color: #4f04ff21;\r\n      }\r\n    }\r\n    .recieved {\r\n      justify-content: flex-start;\r\n      .content {\r\n        background-color: #9900ff20;\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport default ChatContainer"]},"metadata":{},"sourceType":"module"}