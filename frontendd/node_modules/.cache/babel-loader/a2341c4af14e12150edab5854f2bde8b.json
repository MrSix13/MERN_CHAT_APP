{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bastian\\\\Desktop\\\\Chat_App\\\\frontend\\\\src\\\\components\\\\Contacts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Logo from '../assets/logo.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Contacts(_ref) {\n  _s();\n\n  let {\n    contacts,\n    currentUser,\n    changeChat\n  } = _ref;\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentUserImage, setCurrentUserImage] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  useEffect(() => {\n    if (currentUser) {\n      setCurrentUserImage(currentUser.avatarImage);\n      setCurrentUserName(currentUser.username);\n    }\n\n    console.log(contacts);\n  }, [currentUser]);\n\n  const changeCurrentChat = (index, contact) => {\n    setCurrentSelected(index);\n    changeChat(contact);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentUserImage && currentUserName && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"snappy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contacts\",\n        children: [contacts.map((contact, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `contact ${index === currentSelected ? \"selected\" : \"\"}`,\n            onClick: () => changeCurrentChat(index, contact),\n            children: [console.log(contact.avatarImage), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `data:image/svg+xml;base64,${contact.avatarImage}`,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: contact.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 37\n          }, this);\n        }), contacts.map((contact, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `contact ${index === currentSelected ? \"selected\" : \"\"}`,\n            onClick: () => changeCurrentChat(index, contact),\n            children: [console.log(contact.avatarImage), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `data:image/svg+xml;base64,${contact.avatarImage}`,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: contact.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this);\n        }), contacts.map((contact, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `contact ${index === currentSelected ? \"selected\" : \"\"}`,\n            onClick: () => changeCurrentChat(index, contact),\n            children: [console.log(contact.avatarImage), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `data:image/svg+xml;base64,${contact.avatarImage}`,\n                alt: \"avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"username\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: contact.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-user\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/svg+xml;base64,${currentUserImage}`,\n            alt: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: currentUserName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Contacts, \"wTP9W2PvLtuLn6SrLcOO3R23lWI=\");\n\n_c = Contacts;\nconst Container = styled.div`\n    display:grid;\n    grid-template-rows: 10% 75% 15%;\n    overflow: hidden;\n    background-color: #080420;\n    .brand{\n        display: flex;\n        align-items:center;\n        justify-content: center;\n        gap: 1rem;\n        img{\n            height: 2rem\n        }\n        h3{\n            color:white;\n        }\n    }\n    .contacts{\n        display: flex;\n        flex-direction:column;\n        align-items:center;\n        overflow: auto;\n        gap: 0.8rem;\n        &::-webkit-scrollbar{\n            width:0.2rem ;\n            &-thumb{\n                background-color: #ffffff39;\n                border-radius: 1rem\n            }\n        }\n        h3{\n            color: white\n        }\n        .contact{\n            background-color: #ffffff39;\n            min-height: 5rem;\n            cursor: pointer;\n            width: 90%;\n            border-radius: 0.2rem;\n            padding: 0.4rem;\n            gap: 1rem;\n            align-items:center;\n            transition: 0.5s ease-in-out;\n            .avatar{\n                img{\n                    height: 3rem\n                }\n            }\n            .username{\n                h3{\n                    color: white\n                }\n            }\n        }\n        .selected{\n            background-color: #9a86f3;\n        }\n    }\n\n    .current-user{\n        background-color: #0d0d30;\n        display:flex;\n        justify-content: center;\n        align-items:center;\n        gap: 2rem;\n        .avatar{\n            img{\n                height:4rem ;\n                max-inline-size: 100%\n            }\n        }\n        .username{\n            h2{\n                color:white\n            }\n        }\n        @media screen and (min-width: 720px) and (max-width: 1080px){\n            gap: 0.5rem;\n            .username{\n                h2{\n                    font-size:1rem\n                }\n            }\n        }\n    }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Contacts\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["C:/Users/Bastian/Desktop/Chat_App/frontend/src/components/Contacts.jsx"],"names":["React","useState","useEffect","styled","Logo","Contacts","contacts","currentUser","changeChat","currentUserName","setCurrentUserName","undefined","currentUserImage","setCurrentUserImage","currentSelected","setCurrentSelected","avatarImage","username","console","log","changeCurrentChat","index","contact","map","Container","div"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport Logo from '../assets/logo.svg';\r\n\r\nexport default function Contacts({contacts, currentUser, changeChat}){\r\n    const [currentUserName, setCurrentUserName] = useState(undefined);\r\n    const [currentUserImage, setCurrentUserImage] = useState(undefined);\r\n    const [currentSelected, setCurrentSelected] = useState(undefined);\r\n\r\n    useEffect(()=>{\r\n        if(currentUser){\r\n            setCurrentUserImage(currentUser.avatarImage);\r\n            setCurrentUserName(currentUser.username)\r\n        }\r\n        console.log(contacts)\r\n\r\n    },[currentUser]);\r\n\r\n  const changeCurrentChat = (index,contact)=>{\r\n      setCurrentSelected(index);\r\n      changeChat(contact)\r\n  }\r\n  return <>\r\n        {\r\n            currentUserImage && currentUserName && (\r\n                <Container>\r\n                    <div className=\"brand\">\r\n                        <img src={Logo} alt=\"logo\"/>\r\n                        <h3>snappy</h3>\r\n                    </div>\r\n                    <div className=\"contacts\">\r\n                        {\r\n                            contacts.map((contact,index)=>{\r\n                                return(\r\n                                    <div className={`contact ${\r\n                                       index === currentSelected ? \"selected\" : \"\"}`} \r\n                                       key={index}\r\n                                       onClick={()=>changeCurrentChat(index,contact)}\r\n                                    >\r\n                                        {console.log(contact.avatarImage)}\r\n                                        <div className=\"avatar\">\r\n                                            <img\r\n                                             src={`data:image/svg+xml;base64,${contact.avatarImage}`}\r\n                                             alt=\"avatar\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"username\">\r\n                                            <h3>{contact.username}</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                        })}\r\n                        {\r\n                            contacts.map((contact,index)=>{\r\n                                return(\r\n                                    <div className={`contact ${\r\n                                       index === currentSelected ? \"selected\" : \"\"}`} \r\n                                       key={index}\r\n                                       onClick={()=>changeCurrentChat(index,contact)}\r\n                                    >\r\n                                        {console.log(contact.avatarImage)}\r\n                                        <div className=\"avatar\">\r\n                                            <img\r\n                                             src={`data:image/svg+xml;base64,${contact.avatarImage}`}\r\n                                             alt=\"avatar\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"username\">\r\n                                            <h3>{contact.username}</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                        })}\r\n                        {\r\n                            contacts.map((contact,index)=>{\r\n                                return(\r\n                                    <div className={`contact ${\r\n                                       index === currentSelected ? \"selected\" : \"\"}`} \r\n                                       key={index}\r\n                                       onClick={()=>changeCurrentChat(index,contact)}\r\n                                    >\r\n                                        {console.log(contact.avatarImage)}\r\n                                        <div className=\"avatar\">\r\n                                            <img\r\n                                             src={`data:image/svg+xml;base64,${contact.avatarImage}`}\r\n                                             alt=\"avatar\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"username\">\r\n                                            <h3>{contact.username}</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                        })}\r\n                    </div>\r\n                    <div className=\"current-user\">\r\n                        <div className=\"avatar\">\r\n                            <img\r\n                             src={`data:image/svg+xml;base64,${currentUserImage}`}\r\n                             alt=\"avatar\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"username\">\r\n                            <h2>{currentUserName}</h2>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            )\r\n        }\r\n      </>\r\n}\r\n\r\nconst Container = styled.div`\r\n    display:grid;\r\n    grid-template-rows: 10% 75% 15%;\r\n    overflow: hidden;\r\n    background-color: #080420;\r\n    .brand{\r\n        display: flex;\r\n        align-items:center;\r\n        justify-content: center;\r\n        gap: 1rem;\r\n        img{\r\n            height: 2rem\r\n        }\r\n        h3{\r\n            color:white;\r\n        }\r\n    }\r\n    .contacts{\r\n        display: flex;\r\n        flex-direction:column;\r\n        align-items:center;\r\n        overflow: auto;\r\n        gap: 0.8rem;\r\n        &::-webkit-scrollbar{\r\n            width:0.2rem ;\r\n            &-thumb{\r\n                background-color: #ffffff39;\r\n                border-radius: 1rem\r\n            }\r\n        }\r\n        h3{\r\n            color: white\r\n        }\r\n        .contact{\r\n            background-color: #ffffff39;\r\n            min-height: 5rem;\r\n            cursor: pointer;\r\n            width: 90%;\r\n            border-radius: 0.2rem;\r\n            padding: 0.4rem;\r\n            gap: 1rem;\r\n            align-items:center;\r\n            transition: 0.5s ease-in-out;\r\n            .avatar{\r\n                img{\r\n                    height: 3rem\r\n                }\r\n            }\r\n            .username{\r\n                h3{\r\n                    color: white\r\n                }\r\n            }\r\n        }\r\n        .selected{\r\n            background-color: #9a86f3;\r\n        }\r\n    }\r\n\r\n    .current-user{\r\n        background-color: #0d0d30;\r\n        display:flex;\r\n        justify-content: center;\r\n        align-items:center;\r\n        gap: 2rem;\r\n        .avatar{\r\n            img{\r\n                height:4rem ;\r\n                max-inline-size: 100%\r\n            }\r\n        }\r\n        .username{\r\n            h2{\r\n                color:white\r\n            }\r\n        }\r\n        @media screen and (min-width: 720px) and (max-width: 1080px){\r\n            gap: 0.5rem;\r\n            .username{\r\n                h2{\r\n                    font-size:1rem\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}